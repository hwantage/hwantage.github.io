<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostCSS on Hwantage world</title>
    <link>https://hwantage.github.io/tags/postcss/</link>
    <description>Recent content in PostCSS on Hwantage world</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>{year}</copyright>
    <lastBuildDate>Mon, 15 Jan 2024 13:14:52 +0900</lastBuildDate>
    <atom:link href="https://hwantage.github.io/tags/postcss/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS-Deduplication (postcss 커스텀 스크립트를 이용한 CSS 중복 제거)</title>
      <link>https://hwantage.github.io/posts/css-deduplicate/</link>
      <pubDate>Mon, 15 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/css-deduplicate/</guid>
      <description>본 포스팅을 통해 postcss 를 이용하는 방법에 대해 배울 수 있습니다. 또한 원하는 플러그인이 없는 경우 custom 플러그인을 작성하는 방법을 학습할 수 있습니다.</description>
    </item>
    <item>
      <title>CSS-Deduplication part 2 (media 쿼리 중복 제거 추가 및 npmjs 배포)</title>
      <link>https://hwantage.github.io/posts/css-deduplicate-2/</link>
      <pubDate>Mon, 15 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/css-deduplicate-2/</guid>
      <description>이전 포스팅을 통해 postcss 커스텀 스크립트로 CSS 중복을 제거하는 방법을 확인할 수 있습니다.&#xA;이번 포스팅에서는 media 쿼리에 대한 처리 로직을 추가하고 postcss 플러그인으로 제작하여 npmjs.</description>
    </item>
  </channel>
</rss>
