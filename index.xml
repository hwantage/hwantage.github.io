<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hwantage world</title>
    <link>https://hwantage.github.io/</link>
    <description>Recent content on Hwantage world</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>{year}</copyright>
    <lastBuildDate>Thu, 16 May 2024 15:06:52 +0900</lastBuildDate>
    <atom:link href="https://hwantage.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GIT 초기 명령어</title>
      <link>https://hwantage.github.io/posts/gitinit/</link>
      <pubDate>Thu, 16 May 2024 15:06:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/gitinit/</guid>
      <description>GIT 초기화 git init git add . git commit -m &amp;#34;first commit&amp;#34; git remote add origin https://.</description>
    </item>
    <item>
      <title>크롬 익스텐션 개발기</title>
      <link>https://hwantage.github.io/posts/chrome-extension/</link>
      <pubDate>Mon, 12 Feb 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/chrome-extension/</guid>
      <description>Summary 라이선스 발급 취소 사유 메일 발송 크롬 익스텐션 개발 후기.&#xA;Abstract 사내 라이선스 센터 발급 취소시 발급 취소 사유를 이메일로 발송하는 기능에 대한 요구사항으로 개발을 진행했습니다.</description>
    </item>
    <item>
      <title>HUGO 사이트 배포를 위한 배치 파일 생성</title>
      <link>https://hwantage.github.io/posts/hugo-deploy-automation/</link>
      <pubDate>Sat, 27 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/hugo-deploy-automation/</guid>
      <description>블로그를 Github 에 commit 하기 위해서는 우선 hugo 빌드를 수행하고 git add 명령어 및 커밋 메시지 작성후 push를 해야 합니다.</description>
    </item>
    <item>
      <title>Javascript 성능 향상 코딩 팁</title>
      <link>https://hwantage.github.io/posts/js-performance-coding/</link>
      <pubDate>Tue, 23 Jan 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-performance-coding/</guid>
      <description>자바스크립트 성능 측정 방법 console.time console.time(0); // 여러가지 로직 수행 console.timeEnd(0); console.time(&amp;#39;t1&amp;#39;); // 다양한 로직 수행 console.</description>
    </item>
    <item>
      <title>Javascript find, findIndex, filter</title>
      <link>https://hwantage.github.io/posts/js-find/</link>
      <pubDate>Mon, 22 Jan 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-find/</guid>
      <description>find find() 메서드는 주어진 판별 함수를 만족하는 첫 번째 요소 의 값을 반환합니다. 그런 요소가 없다면 undefined를 반환합니다.</description>
    </item>
    <item>
      <title>Javascript 직렬화(serialization)</title>
      <link>https://hwantage.github.io/posts/js-serialization/</link>
      <pubDate>Mon, 22 Jan 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-serialization/</guid>
      <description>직렬화의 의미는 자바스크립트의 메모리 상에 존재하는 Object 나 데이터 구조를 다른 용도로 사용하기 위해 포맷을 변환하는 것.</description>
    </item>
    <item>
      <title>Javascript 템플릿 리터럴(Template literal)</title>
      <link>https://hwantage.github.io/posts/js-template-literal/</link>
      <pubDate>Mon, 22 Jan 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-template-literal/</guid>
      <description>ES6는 템플릿 리터럴(Template literal)이라고 불리는 새로운 문자열 표기법을 도입하였습니다. 템플릿 리터럴은 일반 문자열과 비슷해 보이지만, ‘ 또는 “ 같은 통상적인 따옴표 문자 대신 백틱(backtick) 문자 `를 사용합니다.</description>
    </item>
    <item>
      <title>Javascript 함수 선언 방법과 호이스팅</title>
      <link>https://hwantage.github.io/posts/js-function/</link>
      <pubDate>Mon, 22 Jan 2024 14:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-function/</guid>
      <description>함수 선언 방법 함수선언문 (Function Declaration) // 일반적인 함수 선언 방법 function add(a, b) { return a + b } 함수표현식 (Function expression) // arrow function으로 함수표현식 선언 방법 const myFunc1 = () =&amp;gt; { } // 매개변수가 없을 경우 const myFunc2 = x =&amp;gt; { } // 매개변수가 한 개인 경우, 소괄호를 생략 가능 const myFunc3 = (x, y) =&amp;gt; { } // 매개변수가 여러 개인 경우, 소괄호를 생략 불가 // Body 전개 방법 const myFunc4 = x =&amp;gt; { return x * 2 } // single line block const myFunc5 = x =&amp;gt; x * 2 // 함수 몸체가 한줄의 구문이라면 중괄호 생략 가능 const myFunc6 = () =&amp;gt; { return { a: 1 }} const myFunc7 = () =&amp;gt; ({ a: 1 }) // 위 표현과 동일.</description>
    </item>
    <item>
      <title>Javascript 비구조화 할당</title>
      <link>https://hwantage.github.io/posts/js-destructuring-assignment/</link>
      <pubDate>Mon, 22 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/js-destructuring-assignment/</guid>
      <description>정의 비구조화 할당(destructuring assignment) 구문은 배열이나 객체의 속성을 해체하여 그 값을 개별 변수에 담을 수 있게 하는 자바스크립트 표현식(expression)</description>
    </item>
    <item>
      <title>HUGO로 제작한 블로그를 구글 검색, 네이버 검색, 다음 검색에 노출시키기</title>
      <link>https://hwantage.github.io/posts/google-search-console/</link>
      <pubDate>Sun, 21 Jan 2024 11:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/google-search-console/</guid>
      <description>검색엔진에 노출이 되도록 블로그를 설정합니다.&#xA;구글 검색 노출 방법 구글 서치 콘솔 로 접속하여 두번째 URL 접두어에 등록을 하면 됩니다.</description>
    </item>
    <item>
      <title>HUGO 블로그에 구글 애널리틱스 연결하기</title>
      <link>https://hwantage.github.io/posts/google-analytics/</link>
      <pubDate>Sat, 20 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/google-analytics/</guid>
      <description>HUGO를 통해 블로그를 생성하고 나서 과연 방문객이 얼마나 될지 궁금할 것이다.&#xA;구글 애널리틱스를 이용하여 방문현황을 파악해 보자.</description>
    </item>
    <item>
      <title>HUGO 블로그에 댓글 기능 연동</title>
      <link>https://hwantage.github.io/posts/utterances/</link>
      <pubDate>Sat, 20 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/utterances/</guid>
      <description>HUGO를 통해 블로그 포스트 하단에 댓글 기능을 연동하는 방법을 알아보겠습니다.&#xA;댓글 기능을 연동하는 방법은 대표적인 것이 Disqus 입니다.</description>
    </item>
    <item>
      <title>Xterm.js 를 이용한 fake terminal 웹 제작</title>
      <link>https://hwantage.github.io/posts/fake-terminal/</link>
      <pubDate>Fri, 19 Jan 2024 10:29:50 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/fake-terminal/</guid>
      <description>Xterm.js 를 이용하여 웹 사이트에 fake terminal 을 구현합니다.&#xA;데모를 확인해보세요. DEMO&#xA;시작하기 먼저, 모듈을 설치해야 합니다.</description>
    </item>
    <item>
      <title>심볼릭 링크로 마크다운 에디터로 업로드한 이미지 HUGO에서 바로 확인</title>
      <link>https://hwantage.github.io/posts/symboliclink/</link>
      <pubDate>Tue, 16 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/symboliclink/</guid>
      <description>Vscode의 Extension 중 하나인 Markdown Editor 를 통해 WYSIWYG 방식으로 편집할 때 이미지를 붙여넣기 하면 마크업 에디터에서는 잘 보이지만 hugo server 로 서버를 띄워 확인해보면 경로가 맞지 않아 이미지가 뜨지 않게 된다.</description>
    </item>
    <item>
      <title>CSS-Deduplication part1 (postcss 커스텀 스크립트를 이용한 CSS 중복 제거)</title>
      <link>https://hwantage.github.io/posts/css-deduplicate/</link>
      <pubDate>Tue, 16 Jan 2024 11:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/css-deduplicate/</guid>
      <description>본 포스팅을 통해 postcss 를 이용하는 방법에 대해 배울 수 있습니다. 또한 원하는 플러그인이 없는 경우 custom 플러그인을 작성하는 방법을 학습할 수 있습니다.</description>
    </item>
    <item>
      <title>CSS-Deduplication part 2 (CSS 중복제거 플러그인 제작)</title>
      <link>https://hwantage.github.io/posts/css-deduplicate-2/</link>
      <pubDate>Mon, 15 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/css-deduplicate-2/</guid>
      <description>이전 포스팅을 통해 postcss 커스텀 스크립트로 CSS 중복을 제거하는 방법을 확인할 수 있습니다.&#xA;이번 포스팅에서는 media 쿼리에 대한 처리 로직을 추가하고 postcss 플러그인으로 제작해 보도록 하겠습니다.</description>
    </item>
    <item>
      <title>CSS-Deduplication part 3 (postcss 플러그인을 npmjs.org에 배포)</title>
      <link>https://hwantage.github.io/posts/npm-publish/</link>
      <pubDate>Sun, 14 Jan 2024 10:32:14 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/npm-publish/</guid>
      <description>CSS-Deduplication part1(postcss 커스텀 스크립트를 이용한 CSS 중복 제거) 포스트를 통해 postcss 커스텀 스크립트로 CSS 중복을 제거하는 방법을 확인할 수 있습니다.</description>
    </item>
    <item>
      <title>HUGO를 이용한 정적 사이트 생성 및 github pages를 이용한 블로그 운영 방법</title>
      <link>https://hwantage.github.io/posts/hugo/</link>
      <pubDate>Fri, 12 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/hugo/</guid>
      <description>Agenda&#xA;SSG 개념 JAM Stack 개념 SSG 툴 Github 계정 생성 및 사용 Github pages 사용법 HUGO를 이용한 블로그 생성 Markdown 사용법 VSCode Markdown 에디터 활용법 SSG 개념 정적 사이트 : 단순 html, css, js 로만 구성된 사이트.</description>
    </item>
    <item>
      <title>nvm을 이용한 node.js의 버전 관리 방법</title>
      <link>https://hwantage.github.io/posts/nvm/</link>
      <pubDate>Fri, 12 Jan 2024 13:14:52 +0900</pubDate>
      <guid>https://hwantage.github.io/posts/nvm/</guid>
      <description>새 노트북에서 node 를 설치후 기존에 잘 돌아가던 프로젝트를 빌드 하거나 실행하면 다음과 같은 에러가 발생하였다.</description>
    </item>
  </channel>
</rss>
