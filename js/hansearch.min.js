const CHO_HANGUL=["ㄱ","ㄲ","ㄴ","ㄷ","ㄸ","ㄹ","ㅁ","ㅂ","ㅃ","ㅅ","ㅆ","ㅇ","ㅈ","ㅉ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ"],HAN_START_CHAR="가".charCodeAt(),CHO_PERIOD=Math.floor("까".charCodeAt()-"가".charCodeAt()),JUNG_PERIOD=Math.floor("개".charCodeAt()-"가".charCodeAt()),combineHangul=function(e,t,n){return String.fromCharCode(HAN_START_CHAR+e*CHO_PERIOD+t*JUNG_PERIOD+n)},makeRegexByCho=function(e=""){const t=e.replace(/[()|[\]{}\\]/g,""),n=CHO_HANGUL.reduce((e,t,n)=>e.replace(new RegExp(t,"g"),`[${combineHangul(n,0,0)}-${combineHangul(n+1,0,-1)}]`),t);return new RegExp(`(${n})`,"i")},hanSearch=function(e,t,n=[]){const s=makeRegexByCho(t);let o=e.filter(e=>{for(const t in e)if(e.hasOwnProperty(t)&&(n.length===0||n.includes(t))&&s.test(e[t]))return!0;return!1});return o}